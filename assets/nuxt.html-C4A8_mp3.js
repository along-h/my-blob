import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as t,e,f as p}from"./app-CaxZhZIt.js";const o={},i=t("p",null,"nuxt基本使用",-1),c=p(`<h1 id="nuxt" tabindex="-1"><a class="header-anchor" href="#nuxt" aria-hidden="true">#</a> Nuxt</h1><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h2><p>​ 定义在目录中的数据，nuxt会自动注册，可以直接引入</p><h3 id="assets" tabindex="-1"><a class="header-anchor" href="#assets" aria-hidden="true">#</a> assets</h3><p>​ 放全局的公共资源，img等</p><h3 id="components" tabindex="-1"><a class="header-anchor" href="#components" aria-hidden="true">#</a> components</h3><p>​ 公共组件</p><h3 id="composables-utils" tabindex="-1"><a class="header-anchor" href="#composables-utils" aria-hidden="true">#</a> composables/utils</h3><p>公共hooks/方法，可以直接调用</p><h3 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h3><h3 id="layouts" tabindex="-1"><a class="header-anchor" href="#layouts" aria-hidden="true">#</a> layouts</h3><p>​ 布局组件，会直接引入，可以自定义页面使用definePageMeta来决定使用哪个layout</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token function">definePageMeta</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token string">&#39;custom&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 另外假如有多层目录结构的话建议命名方式一致</p><table><thead><tr><th style="text-align:center;">file</th><th style="text-align:center;">layoutName</th></tr></thead><tbody><tr><td style="text-align:center;">~/layouts/desktop/DesktopDefault.vue</td><td style="text-align:center;">desktop-default</td></tr><tr><td style="text-align:center;">~/layouts/desktop-base/DesktopBase.vue</td><td style="text-align:center;">desktop-base</td></tr><tr><td style="text-align:center;">~/layouts/desktop/Desktop.vue</td><td style="text-align:center;">desktop</td></tr></tbody></table><p>​ 否则的话会将重复的给去除掉</p><table><thead><tr><th style="text-align:center;">file</th><th style="text-align:center;">layoutName</th></tr></thead><tbody><tr><td style="text-align:center;">~/layouts/desktop/default.vue</td><td style="text-align:center;">desktop-default</td></tr><tr><td style="text-align:center;">~/layouts/desktop-base/base.vue</td><td style="text-align:center;">desktop-base</td></tr><tr><td style="text-align:center;">~/layouts/desktop/index.vue</td><td style="text-align:center;">desktop</td></tr></tbody></table><h3 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware" aria-hidden="true">#</a> middleware</h3><p>​ 全局路由中间件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtRouteMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> from<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 进行相关操作</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id <span class="token operator">===</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">abortNavigation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">!==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 页面路由守卫</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// pages/profile.vue</span>
<span class="token function">definePageMeta</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 有多个使用数组语法，auth表示全局的中间件middleware/auth.ts</span>
  <span class="token literal-property property">middleware</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Custom inline middleware</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;auth&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pages" tabindex="-1"><a class="header-anchor" href="#pages" aria-hidden="true">#</a> pages</h3><p>​ 页面组件，自动注册路由</p><ul><li>具体的文件名，<code>working.vue</code> 表示 <code>/working</code> 页面</li><li>动态路由： <ul><li><code>pages/users-[group]/[id].vue</code> ，可以匹配<code>/users-admins/123</code></li><li><code>pages/[xx].vue</code>，可以匹配到其余没有的页面，也可以处理.html情况</li></ul></li></ul><p>​ 路由重定义和别名</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">definePageMeta</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&#39;/index.html&#39;</span><span class="token punctuation">,</span>
    alias<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> plugins</h3><p>​ 执行一些自定义行为，插件</p><ol><li>自定义应用行为 (执行生命周期的钩子，如SSR 渲染完成后执行某些操作，或者在客户端挂载前执行某些操作)</li><li>添加全局方法和属性</li><li>处理全局事件 (路由变化、错误处理)</li><li>集成第三方库</li><li>初始化和配置 (设置全局样式、初始化第三方服务等)</li><li>注册全局组件和指令 (有点多余, 已经存在自动注册的组解目录)</li></ol><h4 id="生命周期钩子" tabindex="-1"><a class="header-anchor" href="#生命周期钩子" aria-hidden="true">#</a> 生命周期钩子</h4><p>​ 可以做一些生命周期的操作:</p><ul><li><p>服务器端渲染完成</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export default defineNuxtPlugin((nuxtApp) =&gt; {
  nuxtApp.hook(&#39;app:rendered&#39;, (renderContext) =&gt; {
    // 在 SSR 完成后执行某些操作
    console.log(&#39;服务端渲染html完成&#39;);
  });
});
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>客户端加载完成</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtPlugin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nuxtApp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  nuxtApp<span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">&#39;app:mounted&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 在客户端应用挂载后执行某些操作</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;客户端页面加载完成&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="网络请求" tabindex="-1"><a class="header-anchor" href="#网络请求" aria-hidden="true">#</a> 网络请求</h2><p>有三种方式：</p><ul><li><code>$fetch</code></li><li><code>useAsyncData</code></li><li><code>useFetch</code></li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// During SSR data is fetched twice, once on the server and once on the client.</span>
<span class="token keyword">const</span> dataTwice <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">$fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/item&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// During SSR data is fetched only on the server side and transferred to the client.</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">useAsyncData</span><span class="token punctuation">(</span><span class="token string">&#39;item&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">$fetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/item&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// You can also useFetch as shortcut of useAsyncData + $fetch</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">useFetch</span><span class="token punctuation">(</span><span class="token string">&#39;/api/item&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自定义封装请求" tabindex="-1"><a class="header-anchor" href="#自定义封装请求" aria-hidden="true">#</a> 自定义封装请求</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 *  说明 useFetch 直接访问默认访问页面只在服务端请求一次，客户端端不会重复发起请求，后续客户端可以通过事件进行触发
 */</span>

<span class="token doc-comment comment">/**
 * http get 请求
 * <span class="token keyword">@param</span> <span class="token parameter">url</span>
 * <span class="token keyword">@returns</span> <span class="token punctuation">{</span>Promise&lt;void&gt;<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">httpGet</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">httpRequest</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>method<span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 统一请求方法
 * <span class="token keyword">@param</span> <span class="token parameter">url</span>
 * <span class="token keyword">@param</span> <span class="token parameter">options</span>
 * <span class="token keyword">@returns</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">httpRequest</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">useRuntimeConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// console.log(&quot;请求地址:&quot; + config.public.baseUrl)</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">useFetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        baseURL<span class="token operator">:</span> config<span class="token punctuation">.</span>public<span class="token punctuation">.</span>baseUrl<span class="token punctuation">,</span>
        <span class="token function">onRequest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>options<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 全局请求拦截 (需要注意是服务端请求还是客户端请求,需要单独处理相关逻辑)</span>
            options<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;TOKEN&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">,</span>
                <span class="token operator">...</span>options<span class="token punctuation">.</span>headers
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">onResponse</span><span class="token punctuation">(</span><span class="token punctuation">{</span>response<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 全局响应拦截, 判断响应码等处理</span>
            <span class="token comment">// console.log(&quot;返回数据&quot; + response._data.value)</span>
            <span class="token keyword">return</span> response<span class="token punctuation">.</span>_data<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境判断" tabindex="-1"><a class="header-anchor" href="#环境判断" aria-hidden="true">#</a> 环境判断</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>server<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 服务端</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 客户端</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="公共-页面-配置" tabindex="-1"><a class="header-anchor" href="#公共-页面-配置" aria-hidden="true">#</a> 公共/页面 配置</h2><p>公共配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  runtimeConfig<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// The private keys which are only available server-side</span>
    apiSecret<span class="token operator">:</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// Keys within public are also exposed client-side</span>
    <span class="token keyword">public</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      apiBase<span class="token operator">:</span> <span class="token string">&#39;/api&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 页面中可以通过useRuntimeConfig获取</span>
<span class="token keyword">const</span> runtimeConfig <span class="token operator">=</span> <span class="token function">useRuntimeConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineAppConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&#39;Hello Nuxt&#39;</span><span class="token punctuation">,</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    dark<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    colors<span class="token operator">:</span> <span class="token punctuation">{</span>
      primary<span class="token operator">:</span> <span class="token string">&#39;#ff0000&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 页面中获取</span>
<span class="token keyword">const</span> appConfig <span class="token operator">=</span> <span class="token function">useAppConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="seo" tabindex="-1"><a class="header-anchor" href="#seo" aria-hidden="true">#</a> SEO</h2><h3 id="公共seo" tabindex="-1"><a class="header-anchor" href="#公共seo" aria-hidden="true">#</a> 公共SEO</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  app<span class="token operator">:</span> <span class="token punctuation">{</span>
    head<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// update Nuxt defaults</span>
      charset<span class="token operator">:</span> <span class="token string">&#39;utf-16&#39;</span><span class="token punctuation">,</span>
      viewport<span class="token operator">:</span> <span class="token string">&#39;width=device-width, initial-scale=1, maximum-scale=1&#39;</span><span class="token punctuation">,</span>
      title<span class="token operator">:</span> <span class="token string">&#39;Nuxt&#39;</span><span class="token punctuation">,</span> <span class="token comment">// default fallback title</span>
      htmlAttrs<span class="token operator">:</span> <span class="token punctuation">{</span>
        lang<span class="token operator">:</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      link<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> rel<span class="token operator">:</span> <span class="token string">&#39;icon&#39;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;image/x-icon&#39;</span><span class="token punctuation">,</span> href<span class="token operator">:</span> <span class="token string">&#39;/favicon.ico&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="页面seo" tabindex="-1"><a class="header-anchor" href="#页面seo" aria-hidden="true">#</a> 页面SEO</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 管理头部标签</span>
<span class="token function">useHead</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;My App&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;My amazing site.&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bodyAttrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;test&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">script</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">innerHTML</span><span class="token operator">:</span> <span class="token string">&#39;console.log(\\&#39;Hello world\\&#39;)&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
    
<span class="token comment">// 定义SEO   信息</span>
<span class="token function">useSeoMeta</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;My Amazing Site&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ogTitle</span><span class="token operator">:</span> <span class="token string">&#39;My Amazing Site&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;This is my amazing site, let me tell you all about it.&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ogDescription</span><span class="token operator">:</span> <span class="token string">&#39;This is my amazing site, let me tell you all about it.&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ogImage</span><span class="token operator">:</span> <span class="token string">&#39;https://example.com/image.png&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">twitterCard</span><span class="token operator">:</span> <span class="token string">&#39;summary_large_image&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用utils" tabindex="-1"><a class="header-anchor" href="#常用utils" aria-hidden="true">#</a> 常用utils</h2><h3 id="navigateto" tabindex="-1"><a class="header-anchor" href="#navigateto" aria-hidden="true">#</a> navigateTo</h3><p>路由跳转</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// passing &#39;to&#39; as a string</span>
<span class="token keyword">await</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token string">&#39;/search&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// ... or as a route object</span>
<span class="token keyword">await</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/search&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// ... or as a route object with query parameters</span>
<span class="token keyword">await</span> <span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/search&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">page</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token string">&#39;asc&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="onbeforerouteleave-onbeforerouteupdate" tabindex="-1"><a class="header-anchor" href="#onbeforerouteleave-onbeforerouteupdate" aria-hidden="true">#</a> onBeforeRouteLeave/onBeforeRouteUpdate</h3><p>vueRouter页面路由守卫</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div>`,58);function l(u,r){return a(),s("div",null,[i,e(" more "),c])}const v=n(o,[["render",l],["__file","nuxt.html.vue"]]);export{v as default};
